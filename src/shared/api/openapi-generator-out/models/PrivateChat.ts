/* tslint:disable */
/* eslint-disable */
/**
 * Phialka
 * Phialka server REST API
 *
 * The version of the OpenAPI document: MVP v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
    UserToJSONTyped,
} from './User';

/**
 * Dataclass with private chat data
 * 
 * *there can be only two members
 * @export
 * @interface PrivateChat
 */
export interface PrivateChat {
    /**
     * 
     * @type {string}
     * @memberof PrivateChat
     */
    chatId: string;
    /**
     * 
     * @type {Array<User>}
     * @memberof PrivateChat
     */
    members: Array<User>;
}

/**
 * Check if a given object implements the PrivateChat interface.
 */
export function instanceOfPrivateChat(value: object): value is PrivateChat {
    if (!('chatId' in value) || value['chatId'] === undefined) return false;
    if (!('members' in value) || value['members'] === undefined) return false;
    return true;
}

export function PrivateChatFromJSON(json: any): PrivateChat {
    return PrivateChatFromJSONTyped(json, false);
}

export function PrivateChatFromJSONTyped(json: any, ignoreDiscriminator: boolean): PrivateChat {
    if (json == null) {
        return json;
    }
    return {
        
        'chatId': json['chat_id'],
        'members': ((json['members'] as Array<any>).map(UserFromJSON)),
    };
}

export function PrivateChatToJSON(json: any): PrivateChat {
    return PrivateChatToJSONTyped(json, false);
}

export function PrivateChatToJSONTyped(value?: PrivateChat | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'chat_id': value['chatId'],
        'members': ((value['members'] as Array<any>).map(UserToJSON)),
    };
}

