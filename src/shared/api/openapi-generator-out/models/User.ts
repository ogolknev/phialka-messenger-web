/* tslint:disable */
/* eslint-disable */
/**
 * Phialka
 * Phialka server REST API
 *
 * The version of the OpenAPI document: MVP v1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Datamodel with user profile data
 * @export
 * @interface User
 */
export interface User {
    /**
     * 
     * @type {string}
     * @memberof User
     */
    userId: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    tag: string;
    /**
     * 
     * @type {Date}
     * @memberof User
     */
    birthdate?: Date | null;
    /**
     * 
     * @type {any}
     * @memberof User
     */
    photo?: any | null;
}

/**
 * Check if a given object implements the User interface.
 */
export function instanceOfUser(value: object): value is User {
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('tag' in value) || value['tag'] === undefined) return false;
    return true;
}

export function UserFromJSON(json: any): User {
    return UserFromJSONTyped(json, false);
}

export function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User {
    if (json == null) {
        return json;
    }
    return {
        
        'userId': json['user_id'],
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'tag': json['tag'],
        'birthdate': json['birthdate'] == null ? undefined : (new Date(json['birthdate'])),
        'photo': json['photo'] == null ? undefined : json['photo'],
    };
}

export function UserToJSON(json: any): User {
    return UserToJSONTyped(json, false);
}

export function UserToJSONTyped(value?: User | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'user_id': value['userId'],
        'name': value['name'],
        'description': value['description'],
        'tag': value['tag'],
        'birthdate': value['birthdate'] == null ? undefined : ((value['birthdate'] as any).toISOString().substring(0,10)),
        'photo': value['photo'],
    };
}

